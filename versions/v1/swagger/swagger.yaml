openapi: "3.0.0"
info:
  version: 1.0.0
  title: Lib Quality API
  license:
    name: MIT
servers:
  - url: http://localhost:3000
tags: 
- name: "projects"
- name: "scheduler"
paths:
  /:
    get:
      summary: Api info.
      description: Returns if api is running.
      responses:
        '200':
          description: Information if api is running.
          content:
            application/json:
              schema:
                type: object
                properties:
                  state: 
                    type: string
  /v1/health:
    get:
      summary: Informations about API Health.
      description: Returns informations about API Health.
      responses:
        '200':
          description: Informations about API Health.
          content:
            application/json:
              schema:
                type: object
                properties:
                  state:
                    type: string
                    example:
                      state: UP
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/projects:
    get:
      tags:
        - "projects"
      summary: Project info
      description: Return one project
      parameters: 
        - name: projectName
          in: query
          description: Name of project to search
          required: false
          schema:
            type: string
          example: react or angular or vue
      responses:
        '200':
          description: An project object
          content:
            application/json:    
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/projects/history:
    get:
      tags:
        - "projects"
      summary: Project history in days
      description: Return a list of issues closed by day to use in graph
      parameters: 
        - name: projectNames
          in: query
          description: Names of projects
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          example: angular, react, vue
      responses:
        '200':
          description: An project object
          content:
            application/json:    
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/scheduler/sync:
    post:
      tags:
        - "scheduler"
      summary: Start sync
      description: Start sync with github to populate database
      responses:
        '200':
          description: An success
          content:
            application/json:    
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        issues:
          type: integer
          nullable: true
        avg:
          type: integer
          nullable: true
        std:
          type: integer
          nullable: true
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: string